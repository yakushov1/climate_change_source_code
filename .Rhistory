prefix = "tavg",
col_or_line = "line"), .progress=T)
ann_monthly_graph <- function(df_annualy, df_monthly, station, x,
red_line, gray_line, blue_line, y_labs, prefix,
col_or_line, color_of_col = "black",
print_plot = F){
annualy <- df_annualy |>
filter(Station == station) |>
filter(Year != 2023) |>
template(x = {{x}},
red_line = {{ red_line }},
gray_line = {{ gray_line }},
blue_line  = {{ blue_line }},
y_labs = y_labs,
col_or_line = col_or_line,
color_of_col = color_of_col)+
labs(x = NULL,
y = NULL)
monthly <- df_monthly |>
filter(Station == station) |>
filter(Year != 2023) |>
template(x = {{x}},
red_line = {{ red_line }},
gray_line = {{ gray_line }},
blue_line  = {{ blue_line }},
y_labs = y_labs,
col_or_line = col_or_line,
color_of_col = color_of_col)+
facet_wrap(.~Month, scales = "free")+
theme(axis.text.x = element_text(angle = 60))
total_graph <- annualy / monthly +
plot_layout(heights = c(1, 3))
ggsave(total_graph, file= paste("images/climate/", prefix, "/", station, "_",  prefix, "_graph.png", sep=""),
device = png,
width = 2480, height = 3100, units = "px")
print(paste("График для станции ", station, " сохранен"))
if(print_plot){
print(total_graph)
}
#Выгрузка параметров линейного тренда
monthly_ <- ggplot_build(monthly)
monthly_parametr <- tibble(Month = levels(monthly_$data[[1]]$PANEL),
RR = monthly_$data[[4]]$rr.label,
EQ = monthly_$data[[4]]$eq.label,
P = round(monthly_$data[[4]]$p.value, 5),
Station = station) |>
separate_wider_delim(RR, delim='"', names=c('x','r'), too_many = "drop" ) |>
mutate(b = str_sub(EQ, start = -20, end = -12)) |>
mutate(b = str_remove_all(b, "[ +]")) |>
mutate(b = str_remove(b, '^\\.')) |>
mutate(Parametr = prefix) |>
select(Station, Parametr, Month, RR = r, P, b) |>
mutate_all(type.convert, as.is = T)
write_csv(monthly_parametr, file = paste("initial_data/climate/cleaned/trends/monthly_",
prefix, "/",
station,
"_trends.csv", sep = ""))
print(paste("параметры тренда по станции", station,  "сохранены в файл"))
}
# построит графики для всех метеостанций из вектора station_name:
station_name |> map(\(x) ann_monthly_graph(df_annualy = seven_station_annualy,
df_monthly = seven_station_monthly,
station = x,
x=Year,
red_line=Tavg_roll_mean_from_1976,
gray_line = Tavg,
blue_line = Tavg_roll_mean,
y_labs = "Температура приземного воздуха, [\u00B0C]",
prefix = "tavg",
col_or_line = "line"), .progress=T)
# пример графика
ann_monthly_graph(df_annualy = seven_station_annualy,
df_monthly = seven_station_monthly,
station = "bakhta",
x=Year,
red_line=Tavg_roll_mean_from_1976,
gray_line = Tavg,
blue_line = Tavg_roll_mean,
y_labs = "Температура приземного воздуха, [\u00B0C]",
prefix = "tavg",
col_or_line = "line",
print_plot = T)
tavg_by_season <- season_by_temperature|>
filter(Year != 2023) |>
mutate(Season = factor(Season, labels = c("Осень", "Весна", "Лето", "Зима"))) |>
template(x=Year,
red_line=Tavg_roll_mean,
gray_line = Tavg,
blue_line = Tavg_roll_mean,
y_labs = "Температура приземного воздуха, [\u00B0C]",
col_or_line = "line")+
facet_wrap(.~Season, scales = "free_y")
ggsave(tavg_by_season, file= "images/climate/season/tavg_by_season(by_temperature).png", device = png,
width = 2000, height = 1500, units = "px", bg = "white")
print(tavg_by_season)
station_name |> map(\(x) ann_monthly_graph(seven_station_annualy,
seven_station_monthly,
station = x,
x=Year,
red_line=T_anomaly_roll_mean_from_1976,
gray_line = T_anomaly,
blue_line = T_anomaly_roll_mean,
y_labs = "Отклонения от среднего за 1961-1990 гг., [\u00B0C]",
prefix = "t_anomaly",
col_or_line = "line"), .progress=T)
station_name |> map(\(x) ann_monthly_graph(seven_station_annualy,
seven_station_monthly,
station = x,
x=Year,
red_line=T_anomaly_roll_mean_from_1976,
gray_line = T_anomaly,
blue_line = T_anomaly_roll_mean,
y_labs = "Отклонения от среднего за 1961-1990 гг., [\u00B0C]",
prefix = "t_anomaly",
col_or_line = "line"), .progress=T)
# пример графика
ann_monthly_graph(seven_station_annualy,
seven_station_monthly,
station = "bakhta",
x=Year,
red_line=T_anomaly_roll_mean_from_1976,
gray_line = T_anomaly,
blue_line = T_anomaly_roll_mean,
y_labs = "Отклонения от среднего за 1961-1990 гг., [\u00B0C]",
prefix = "t_anomaly",
col_or_line = "line")
# пример графика
ann_monthly_graph(seven_station_annualy,
seven_station_monthly,
station = "bakhta",
x=Year,
red_line=T_anomaly_roll_mean_from_1976,
gray_line = T_anomaly,
blue_line = T_anomaly_roll_mean,
y_labs = "Отклонения от среднего за 1961-1990 гг., [\u00B0C]",
prefix = "t_anomaly",
col_or_line = "line",
print_plot = T)
ann_monthly_graph(seven_station_annualy,
seven_station_monthly,
station = "bakhta",
x=Year,
red_line=Pr_roll_mean_from_1976,
gray_line = Pr,
blue_line = Pr_roll_mean,
y_labs = "Сумма осадков, мм",
prefix = "pr",
col_or_line = "col")
ann_monthly_graph(seven_station_annualy,
seven_station_monthly,
station = "bakhta",
x=Year,
red_line=Pr_roll_mean_from_1976,
gray_line = Pr,
blue_line = Pr_roll_mean,
y_labs = "Сумма осадков, мм",
prefix = "pr",
col_or_line = "col")
pr_by_season <- season_by_temperature|>
filter(Year != 2023) |>
mutate(Season = factor(Season, labels = c("Осень", "Весна","Лето", "Зима"))) |>
template(x=Year,
red_line=Pr_sum_roll_mean,
gray_line = Pr_sum,
blue_line = Pr_sum_roll_mean,
y_labs = "Сумма осадков, мм",
col_or_line = "col",
color_of_col = "black")+
facet_wrap(.~Season, scales = "free_y")
print(pr_by_season)
ggsave(pr_by_season, file= "images/climate/season/pr_by_season(by_temperature).png", device = png,
width = 2000, height = 1600, units = "px", bg = "white")
ann_monthly_graph(seven_station_annualy,
seven_station_monthly,
station = "bakhta",
x=Year,
red_line=Pr_anomaly_roll_mean_from_1976,
gray_line = Pr_anomaly,
blue_line = Pr_anomaly_roll_mean,
y_labs = "Отклонения от среднего за 1961-1990 гг., мм",
prefix = "pr_anomaly",
col_or_line = "col")
ann_monthly_graph(seven_station_annualy,
seven_station_monthly,
station = "bakhta",
x=Year,
red_line=Pr_anomaly_roll_mean_from_1976,
gray_line = Pr_anomaly,
blue_line = Pr_anomaly_roll_mean,
y_labs = "Отклонения от среднего за 1961-1990 гг., мм",
prefix = "pr_anomaly",
col_or_line = "col")
ann_monthly_graph(seven_station_annualy,
seven_station_monthly |>  filter(!(Month %in% (6:8))),
station = "bakhta",
x=Year,
red_line=Sn_roll_mean_from_1976,
gray_line = Sn,
blue_line = Sn_roll_mean,
y_labs = "Глубина снежного покрова, см",
prefix = "sn",
col_or_line = "col",
color_of_col = "#4682B4")
ann_monthly_graph(seven_station_annualy,
seven_station_monthly |>  filter(!(Month %in% (6:8))),
station = "bakhta",
x=Year,
red_line=Sn_roll_mean_from_1976,
gray_line = Sn,
blue_line = Sn_roll_mean,
y_labs = "Глубина снежного покрова, см",
prefix = "sn",
col_or_line = "col",
color_of_col = "#4682B4")
ann_monthly_graph(seven_station_annualy,
seven_station_monthly |>  filter(!(Month %in% (6:8))),
station = "bakhta",
x=Year,
red_line=Sn_roll_mean_from_1976,
gray_line = Sn,
blue_line = Sn_roll_mean,
y_labs = "Глубина снежного покрова, см",
prefix = "sn",
col_or_line = "col",
color_of_col = "#4682B4")
# Аномалии осадков --------------------------------------------------------
# данные только для 1 метеостанции
ann_monthly_graph(seven_station_annualy,
seven_station_monthly,
station = "bakhta",
x=Year,
red_line=Pr_anomaly_roll_mean_from_1976,
gray_line = Pr_anomaly,
blue_line = Pr_anomaly_roll_mean,
y_labs = "Отклонения от среднего за 1961-1990 гг., мм",
prefix = "pr_anomaly",
col_or_line = "col",
print_plot = T)
# Глубина снежного покрова ------------------------------------------------
# данные только для 1 метеостанции
ann_monthly_graph(seven_station_annualy,
seven_station_monthly |>  filter(!(Month %in% (6:8))),
station = "bakhta",
x=Year,
red_line=Sn_roll_mean_from_1976,
gray_line = Sn,
blue_line = Sn_roll_mean,
y_labs = "Глубина снежного покрова, см",
prefix = "sn",
col_or_line = "col",
color_of_col = "#4682B4",
print_plot = T)
sn_by_season <- season_by_temperature|>
filter(Year != 2023, Season != "Summer") |>
mutate(Season = factor(Season, labels = c("Осень", "Весна", "Зима"))) |>
template(x=Year,
red_line=Sn_avg_roll_mean,
gray_line = Sn_avg,
blue_line = Sn_avg_roll_mean,
y_labs = "Глубина снежного покрова, см",
col_or_line = "col",
color_of_col = "#4682B4")+
facet_wrap(.~Season, scales = "free_y")
print(sn_by_season)
ggsave(sn_by_season, file= "images/climate/season/sn_by_season(by_temperature).png", device = png,
width = 2000, height = 1000, units = "px", bg = "white")
# Аномалии глубины снежного покрова ------------------------------------------------
ann_monthly_graph(seven_station_annualy,
seven_station_monthly |>  filter(!(Month %in% (6:8))),
station = "bakhta",
x=Year,
red_line=Sn_anomaly_roll_mean_from_1976,
gray_line = Sn_anomaly,
blue_line = Sn_anomaly_roll_mean,
y_labs = "Глубина снежного покрова, см",
prefix = "sn_anomaly",
col_or_line = "col",
color_of_col = "#4682B4",
print_plot = T)
ann_monthly_graph(seven_station_annualy,
seven_station_monthly |>  filter(!(Month %in% (6:8))),
station = "bakhta",
x=Year,
red_line=Sn_anomaly_roll_mean_from_1976,
gray_line = Sn_anomaly,
blue_line = Sn_anomaly_roll_mean,
y_labs = "Глубина снежного покрова, см",
prefix = "sn_anomaly",
col_or_line = "col",
color_of_col = "#4682B4",
print_plot = T)
ann_monthly_graph(seven_station_annualy,
seven_station_monthly |>  filter(!(Month %in% (6:8))),
station = "bakhta",
x=Year,
red_line=Sn_anomaly_roll_mean_from_1976,
gray_line = Sn_anomaly,
blue_line = Sn_anomaly_roll_mean,
y_labs = "Глубина снежного покрова, см",
prefix = "sn_anomaly",
col_or_line = "col",
color_of_col = "#4682B4",
print_plot = T)
duration_of_season_by_temp <- season_by_temperature|>
filter(Year != 2023) |>
mutate(Season = factor(Season, labels = c("Осень", "Весна", "Лето", "Зима"))) |>
ggplot(aes(Year, Duration_roll_mean))+
geom_col(aes(y = Duration), fill = "lightblue", alpha = 0.5)+
geom_line(aes(y = Duration_roll_mean), col = "red", linewidth = 1.2)+
facet_wrap(.~Season, scales = "free_y")+
theme_minimal()+
labs(x = "Год",
y = "Продолжительность, дней")
print(duration_of_season_by_temp)
ggsave(duration_of_season_by_temp, file= "images/climate/season/duration_of_season_by_temp.png", device = png,
width = 2000, height = 1500, units = "px", bg = "white")
# Оттаивание-замерзание ---------------------------------------------------
melt_freeze_by_month_graph <- ggplot(melt_freeze_all_winter, aes(Year, Melt_freeze))+
geom_col()+
facet_wrap(.~Month)+
theme_minimal()+
labs(x="Год",
y = 'Количество переходов "замерзание-оттаивание"')
print(melt_freeze_by_month_graph)
ggsave(melt_freeze_by_month_graph, file= "images/climate/melt_freeze_by_month_graph.png", device = png,
width = 2481, height = 1500, units = "px", bg = "white")
# Количество дней с "плохим" снегом по всем станциям (с 2005 года) --------
seven_station_graph <- bad_snow |>
mutate(Station = factor(Station, levels = c("Игарка", "Туруханск", "Верхнеимбатск",
"Бахта", "Бор", "Ворогово", "Ярцево"))) |>
ggplot(aes(Year, count))+
geom_col(fill="lightblue")+
facet_wrap(.~Station, ncol = 1)+
theme_bw()+
labs(x = "Год",
y = "Количество дней, когда снег покрывал  <50% поверхности почвы")+
coord_cartesian(xlim = c(2005,2023 ))+
theme_minimal()
print(seven_station_graph)
ggsave(seven_station_graph, filename="images/climate/bad_snow_by_station.png",
width = 1000, height = 2500, units = "px", bg = "white")
View(bad_snow)
library(tidyverse)
library(writexl)
# Стандартная ошибка - стандартное отклонение/квадратный корень из числа наблюдений
std <- function(x){ sd(x)/sqrt(length(x)) }
# Таблица для вставки в диссертацию ---------------------------------------
# работает только после запуска всех скриптов в директории, то есть последней
monthly_anomaly <- read_csv2("initial_data/climate/cleaned/monthly_anomaly.csv")
monthly_tavg_paths <- list.files("initial_data/climate/cleaned/trends/monthly_tavg/", full.names = T)
monthly_tanomaly_paths <- list.files("initial_data/climate/cleaned/trends/monthly_t_anomaly/", full.names = T)
monthly_tavg_trends <- read_csv(monthly_tavg_paths) |>
pivot_wider(id_cols = c(Station, Month), values_from = c(RR, P, b),
names_from = Parametr)
monthly_tanomaly_trends <- read_csv(monthly_tanomaly_paths) |>
pivot_wider(id_cols = c(Station, Month), values_from = c(RR, P, b),
names_from = Parametr)
#Общая таблица со значениями и характериситками трендов
for_text <- monthly_anomaly |>
group_by(Station, Month) |>
summarise(across(c(Tavg, T_anomaly), list(
SE = \(x) round(std(x), 2),
mean = \(x) round(mean(x), 1))),
T_diff = round(max(T_diff), 1)) |>
left_join(monthly_tavg_trends, by = c("Station", "Month")) |>
left_join(monthly_tanomaly_trends, by = c("Station" ,"Month"))
View(for_text)
# Топ-3 тренда по станциям (средние температуры)
top_b_tavg <- for_text |>
group_by(Station) |>
slice_max(b_tavg, n=3) |>
mutate(Tavg_and_SE = str_c(Tavg_mean, Tavg_SE, sep = "±")) |>
mutate(Station = case_when(
Station == "average_by_all_station" ~ "Все станции",
Station == "bakhta" ~ "Бахта",
Station == "bor" ~ "Бор",
Station == "igarka" ~ "Игарка",
Station == "turukhansk" ~ "Туруханск",
Station == "verkhneimbatsk" ~ "Верхнеимбатск",
Station == "vorogovo" ~ "Ворогово",
Station == "yartsevo" ~ "Ярцево"
)) |>
select(Станция = Station,
Месяц = Month,
Ср.температуры=Tavg_and_SE,
b=b_tavg,
Rsqr = RR_tavg,
P = P_tavg,
T_diff)
# Топ-3 тренда по станциям (температурные аномалии)
top_b_tanomaly <- for_text |>
group_by(Station) |>
slice_max(b_t_anomaly, n=3) |>
mutate(T_anomaly_and_SE = str_c(T_anomaly_mean, T_anomaly_SE, sep = "±")) |>
mutate(Station = case_when(
Station == "average_by_all_station" ~ "Все станции",
Station == "bakhta" ~ "Бахта",
Station == "bor" ~ "Бор",
Station == "igarka" ~ "Игарка",
Station == "turukhansk" ~ "Туруханск",
Station == "verkhneimbatsk" ~ "Верхнеимбатск",
Station == "vorogovo" ~ "Ворогово",
Station == "yartsevo" ~ "Ярцево"
)) |>
select(Станция = Station,
Месяц = Month,
Аномалии=T_anomaly_and_SE,
b=b_t_anomaly,
Rsqr = RR_t_anomaly,
P = P_t_anomaly)
write_xlsx(top_b_tanomaly, "initial_data/climate/cleaned/tables_for_text/top_3_t_anomaly_by_b.xlsx")
write_xlsx(top_b_tanomaly, "initial_data/climate/cleaned/tables_for_text/top_3_t_anomaly_by_b.xlsx")
write_xlsx(top_b_tavg, "initial_data/climate/cleaned/tables_for_text/top_3_tavg_by_b.xlsx")
library(tidyverse)
library(readxl)
# Functions ---------------------------------------------------------------
read_data <- function(paths){
read_excel(paths, sheet = 1) |>
select(Data, Bank, Spec, Sex, Age)
}
filter_data <- function(df){
cyclic_spec <- c("Sor ara", "Sor cae", "Sor iso", "Sor tun", "Sor min",
"Cle rfc", "Cle rut", "Mic oec", "Mic agr")
df |>
filter(Bank == "R") |>
filter(Spec %in% cyclic_spec) |>
mutate(Data = as_date(Data)) |>
mutate(Year = year(Data),
Month = month(Data),
Day = mday(Data),
.after = Data) |>
select(-Data) |>
filter(Month == 8 & Day %in% c(20:30) |
Month == 6 & Day %in% c(20:30))
}
# Paths -------------------------------------------------------------------
paths_XX <- list.files("initial_data/numbers/journal/XX/", full.names = T)
paths_XXI <-  list.files("initial_data/numbers/journal/XXI", full.names = T)
#| label: загрузка пакетов
#| warning: false
#|
library(tidyverse)
library(readxl)
library(plotly)
library(VIM) # использовал для визуализации пропусков
library(imputeTS) # Для интерполяции пропусков
#| label: Функция считывания файлов
#| warning: false
read_files <- function(x){
df <- read_excel(x) |>
mutate(Local_time = as_datetime(Local_time, format = "%d.%m.%Y %R")) |>
mutate(Year = year(Local_time),
Month = as.factor(month(Local_time)),
Day = mday(Local_time)) |>
select(Year, Month, Day, Tavg=T, Pr=RRR, Sn=sss, Sn_description = `E'`) |>
mutate(Pr = case_when(Pr == "Осадков нет" | Pr == "Следы осадков" ~ "0",
.default = Pr)) |>
arrange(Year, Month, Day) |>
mutate(across(c(Year:Day, Sn_description), as.factor),
across(Tavg:Sn, as.numeric)) |>
group_by(Year, Month, Day) |>
summarise(
Tavg = mean(Tavg, na.rm = T),
Pr = sum(Pr, na.rm = T), # Потому что это накопленные осадки, нужно суммировать
Sn = mean(Sn, na.rm = T),
Sn_description = as.factor(str_flatten(Sn_description, ", ", na.rm = T))
)
return(df)
}
#| label: Функция построения интерактивного графика
#| warning: false
interactive_graph <- function(df, parametr, title) {
plot_ly(df, type = "scatter", mode = "lines") |>
add_trace(x = ~Date, y = ~df[[parametr]], name = title) |>
layout(
showlegend = F, title = title,
xaxis = list(rangeslider = list(visible = T))
)
}
#| label: Загрузка данных из Мирового центра данных
#| warning: false
obninsk_temperature <- read_excel("initial_data/climate/1961_2005/23776_TTTR.xlsx") |>
select(
Year = год,
Month = месяц,
Day = день,
Tavg = Тср,
Pr = осадки
)
#| label: Загрузка данных из Мирового центра данных
#| warning: false
obninsk_temperature <- read_excel("../initial_data/climate/1961_2005/23776_TTTR.xlsx") |>
select(
Year = год,
Month = месяц,
Day = день,
Tavg = Тср,
Pr = осадки
)
obninsk_snow <- read.csv2("../initial_data/climate/1961_2005/23776_snow.csv", fileEncoding = "windows-1251") |>
select(
Station = Станция,
Year = Год,
Month = Месяц,
Day = День,
Sn = Высота_снежного_покрова,
Sn_description = Снежный_покров_.степень_покрытия
)
obninsk <- obninsk_temperature |>
left_join(obninsk_snow, by = c("Year", "Month", "Day")) |>
select(-Station) |>
filter(Year<2005 | (Year==2005 & Month == 1))

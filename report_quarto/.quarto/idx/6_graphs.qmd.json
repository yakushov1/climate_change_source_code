{"title":"Графики","markdown":{"yaml":{"title":"Графики","author":"Vasily Yakushov","format":{"html":{"code-fold":true,"code-tools":true}}},"headingText":"Шаг 1: Загрузка необходимых пакетов","containsRefs":false,"markdown":"\n\nИсходный код всех необходимых графиков. Написаны шаблоны графиков, которые применяются к данным с различных метеостанций, затем графики сохраняются в отдельные png-файлы автоматически.\n\n\n```{r}\n#| label: загрузка пакетов\n#| warning: false \nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(ggpmisc) # для добавления линии регрессии на график\n\n```\n\n### Шаг 2: Импортируем все необходимые csv\n\n```{r}\n#| warning: false \n# Import ------------------------------------------------------------------\nseven_station_monthly <- read_csv2(\"../initial_data/climate/cleaned/monthly_anomaly.csv\")\nseven_station_annualy <- read_csv2(\"../initial_data/climate/cleaned/annualy_anomaly.csv\")\n\nstation_name <- levels(as.factor(seven_station_annualy$Station))\n\n#Сезоны, выделенные по переходу температур/снега через 0\nseason_by_temperature <- read_csv2(\"../initial_data/climate/cleaned/season_by_temperature.csv\")\nseason_by_snow <- read_csv2(\"../initial_data/climate/cleaned/season_by_snow.csv\")\n\n#Оттаивание-замерзание\nmelt_freeze_all_winter <- read_csv2(\"../initial_data/climate/cleaned/melt_freeze_by_month.csv\")\n\n\n# Количество дней с \"плохим\" снежным покровом по всем станциям\nbad_snow <- read_csv2(\"../initial_data/climate/cleaned/all_station_bad_snow.csv\")\n\n\n```\n\n### Шаблоны графиков\n\n```{r}\n#| warning: false\n# Templates ---------------------------------------------------------------\n# шаблон для графика\n# df - входной датасет\n# x - параметр, который будет отображаться по оси X \n# red_line - параметр для красной линии (линия линейной регрессии) и т.д.\n# y_labs - подпись к оси Y\n# col_or_line - график столбчатый или линейный?\n# см реальные примеры ниже\n\ntemplate <- function(df, x, red_line, gray_line, blue_line,\n                     y_labs, col_or_line, color_of_col){\n  \n  # Выбор: столбчатый или линейный график? \n  geometry <- function(col_or_line, color_of_col){\n    if (col_or_line == \"col\"){\n      list(geom_col(aes(y={{ gray_line }}), alpha=0.2, fill = color_of_col))\n    }\n    else {\n      list(geom_line(aes({{ x }}, {{ gray_line }}), alpha = 0.2))\n    }\n  }\n  \n  ggplot(df, aes(x = {{ x }}, y = {{ red_line }}))+\n    geometry(col_or_line, color_of_col)+\n    geom_line(aes({{ x }}, {{ blue_line }}), color = \"#4682B4\", linewidth = 1.1)+\n    stat_poly_line(color = \"red\", alpha = 0.5, na.rm = T)+\n    stat_poly_eq(use_label(\"eq\"), na.rm = T)+\n    stat_poly_eq(use_label(c(\"R2\",\"p\")), label.y = 0.9, na.rm = T)+\n    theme_minimal()+\n    labs(x = \"Год\",\n         y = y_labs)+\n    scale_y_continuous(labels = scales::label_number(accuracy = 1))\n}\n\n\n# график, когда сверху на всю ширину годовые значения,\n# а ниже панелями - среднемесячные\n# графики будут сохранены в папки внутри images\n# кроме того, сохраняет параметры линии тренда в отдельные csv \n# путь см в теле функции\n# выдаст ошибку, если требуемых папок не существует\n# df_annualy - датафрейм с годовыми значениями\n# df_monthly - датафрейм с месячными значениями\n# station - название станции (датафрейм фильтруется по названиям станций,\n# оно также фигурирует в названии выходных файлов)\n# остальные аргументы требуются для образца template (функция выше)\n# кроме prefix - фигурирует в именах выходных папок, чтобы не запутаться\n# и print_plot - показывать (T) или нет(F, default) график в RSTudio?\n\nann_monthly_graph <- function(df_annualy, df_monthly, station, x,\n                    red_line, gray_line, blue_line, y_labs, prefix,\n                    col_or_line, color_of_col = \"black\",\n                    print_plot = F){\n  \n  annualy <- df_annualy |> \n    filter(Station == station) |> \n    filter(Year != 2023) |>\n    template(x = {{x}},\n             red_line = {{ red_line }},\n             gray_line = {{ gray_line }},\n             blue_line  = {{ blue_line }},\n             y_labs = y_labs,\n             col_or_line = col_or_line,\n             color_of_col = color_of_col)+\n    labs(x = NULL,\n         y = NULL)\n  \n  monthly <- df_monthly |> \n    filter(Station == station) |>\n    filter(Year != 2023) |>\n    template(x = {{x}},\n             red_line = {{ red_line }},\n             gray_line = {{ gray_line }},\n             blue_line  = {{ blue_line }},\n             y_labs = y_labs,\n             col_or_line = col_or_line,\n             color_of_col = color_of_col)+\n    facet_wrap(.~Month, scales = \"free\")+\n    theme(axis.text.x = element_text(angle = 60))\n  \n  total_graph <- annualy / monthly +\n    plot_layout(heights = c(1, 3))\n  \n  \n  \n  # ggsave(total_graph, file= paste(\"images/climate/\", prefix, \"/\", station, \"_\",  prefix, \"_graph.png\", sep=\"\"),\n  #        device = png,\n  #        width = 2480, height = 3100, units = \"px\")\n  \n  print(paste(\"График для станции \", station, \" сохранен\"))\n  if(print_plot){\n    print(total_graph)\n  }\n  \n  #Выгрузка параметров линейного тренда\n  monthly_ <- ggplot_build(monthly)\n  monthly_parametr <- tibble(Month = levels(monthly_$data[[1]]$PANEL),\n                             RR = monthly_$data[[4]]$rr.label, \n                             EQ = monthly_$data[[4]]$eq.label,\n                             P = round(monthly_$data[[4]]$p.value, 5),\n                             Station = station) |>\n    separate_wider_delim(RR, delim='\"', names=c('x','r'), too_many = \"drop\" ) |> \n    mutate(b = str_sub(EQ, start = -20, end = -12)) |> \n    mutate(b = str_remove_all(b, \"[ +]\")) |> \n    mutate(b = str_remove(b, '^\\\\.')) |> \n    mutate(Parametr = prefix) |>\n    select(Station, Parametr, Month, RR = r, P, b) |> \n    mutate_all(type.convert, as.is = T)\n  \n # write_csv(monthly_parametr, file = paste(\"../initial_data/climate/cleaned/trends/monthly_\",                                            prefix, \"/\", station, \"_trends.csv\", sep = \"\"))\n  print(paste(\"параметры тренда по станции\", station,  \"сохранены в файл\"))\n}\n```\n\n### Средние температуры\n\n```{r}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 14\n\n# построит графики для всех метеостанций из вектора station_name:\n# station_name |> map(\\(x) ann_monthly_graph(df_annualy = seven_station_annualy,\n#                                            df_monthly = seven_station_monthly,\n#                                            station = x,\n#                                            x=Year,\n#                                            red_line=Tavg_roll_mean_from_1976,\n#                                            gray_line = Tavg,\n#                                            blue_line = Tavg_roll_mean,\n#                                            y_labs = \"Температура приземного воздуха, [\\u00B0C]\",\n#                                            prefix = \"tavg\",\n#                                            col_or_line = \"line\"), .progress=T)\n\n\n# пример графика\nann_monthly_graph(df_annualy = seven_station_annualy,\n                  df_monthly = seven_station_monthly,\n                  station = \"bakhta\",\n                  x=Year,\n                  red_line=Tavg_roll_mean_from_1976,\n                  gray_line = Tavg,\n                  blue_line = Tavg_roll_mean,\n                  y_labs = \"Температура приземного воздуха, [\\u00B0C]\",\n                  prefix = \"tavg\",\n                  col_or_line = \"line\",\n                  print_plot = T)\n```\n\n### Среднесезонные температуры (сезоны выделены по температурам)\n\n```{r}\n#| warning: false\n\n# данные есть только для 1 метеостанции, поэтому map не использую\ntavg_by_season <- season_by_temperature|>\n  filter(Year != 2023) |>\n  mutate(Season = factor(Season, labels = c(\"Осень\", \"Весна\", \"Лето\", \"Зима\"))) |> \n  template(x=Year,\n           red_line=Tavg_roll_mean,\n           gray_line = Tavg,\n           blue_line = Tavg_roll_mean,\n           y_labs = \"Температура приземного воздуха, [\\u00B0C]\",\n           col_or_line = \"line\")+\n  facet_wrap(.~Season, scales = \"free_y\")\n\nprint(tavg_by_season)\n\n# ggsave(tavg_by_season, file= \"images/climate/season/tavg_by_season(by_temperature).png\", device = png,\n#        width = 2000, height = 1500, units = \"px\", bg = \"white\")\n\n```\n\n### Температурные аномалии\n\n```{r}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 14\n\n# построит графики для всех метеостанций из вектора station_name:\n\n# station_name |> map(\\(x) ann_monthly_graph(seven_station_annualy,\n#                                  seven_station_monthly,\n#                                  station = x,\n#                                  x=Year,\n#                                  red_line=T_anomaly_roll_mean_from_1976,\n#                                  gray_line = T_anomaly,\n#                                  blue_line = T_anomaly_roll_mean,\n#                                  y_labs = \"Отклонения от среднего за 1961-1990 гг., [\\u00B0C]\",\n#                                  prefix = \"t_anomaly\",\n#                                  col_or_line = \"line\"), .progress=T)\n\n# пример графика\nann_monthly_graph(seven_station_annualy,\n                  seven_station_monthly,\n                  station = \"bakhta\",\n                  x=Year,\n                  red_line=T_anomaly_roll_mean_from_1976,\n                  gray_line = T_anomaly,\n                  blue_line = T_anomaly_roll_mean,\n                  y_labs = \"Отклонения от среднего за 1961-1990 гг., [\\u00B0C]\",\n                  prefix = \"t_anomaly\",\n                  col_or_line = \"line\",\n                  print_plot = T)\n```\n\n### Суммы осадков\n\n```{r}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 14\n\n# есть данные только по 1 станции, поэтому без map\nann_monthly_graph(seven_station_annualy,\n                                 seven_station_monthly,\n                                 station = \"bakhta\",\n                                 x=Year,\n                                 red_line=Pr_roll_mean_from_1976,\n                                 gray_line = Pr,\n                                 blue_line = Pr_roll_mean,\n                                 y_labs = \"Сумма осадков, мм\",\n                                 prefix = \"pr\",\n                                 col_or_line = \"col\",\n                                print_plot = T)\n```\n\n### Суммы осадков по сезонам\n\n```{r}\n#| warning: false\n\npr_by_season <- season_by_temperature|>\n  filter(Year != 2023) |>\n  mutate(Season = factor(Season, labels = c(\"Осень\", \"Весна\",\"Лето\", \"Зима\"))) |> \n  template(x=Year,\n           red_line=Pr_sum_roll_mean,\n           gray_line = Pr_sum,\n           blue_line = Pr_sum_roll_mean,\n           y_labs = \"Сумма осадков, мм\",\n           col_or_line = \"col\",\n           color_of_col = \"black\")+\n  facet_wrap(.~Season, scales = \"free_y\")\n\nprint(pr_by_season)\n\n# ggsave(pr_by_season, file= \"images/climate/season/pr_by_season(by_temperature).png\", device = png,\n#        width = 2000, height = 1600, units = \"px\", bg = \"white\")\n```\n\n### Аномалии осадков\n\n```{r}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 14\n\n# данные только для 1 метеостанции\nann_monthly_graph(seven_station_annualy,\n                  seven_station_monthly,\n                  station = \"bakhta\",\n                  x=Year,\n                  red_line=Pr_anomaly_roll_mean_from_1976,\n                  gray_line = Pr_anomaly,\n                  blue_line = Pr_anomaly_roll_mean,\n                  y_labs = \"Отклонения от среднего за 1961-1990 гг., мм\",\n                  prefix = \"pr_anomaly\",\n                  col_or_line = \"col\",\n                  print_plot = T)\n```\n\n### Глубина снежного покрова\n\n```{r}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 14\n\n# данные только для 1 метеостанции\nann_monthly_graph(seven_station_annualy,\n                  seven_station_monthly |>  filter(!(Month %in% (6:8))),\n                  station = \"bakhta\",\n                  x=Year,\n                  red_line=Sn_roll_mean_from_1976,\n                  gray_line = Sn,\n                  blue_line = Sn_roll_mean,\n                  y_labs = \"Глубина снежного покрова, см\",\n                  prefix = \"sn\",\n                  col_or_line = \"col\",\n                  color_of_col = \"#4682B4\",\n                  print_plot = T)\n```\n\n### Глубина снежного покрова по сезонам\n\n```{r}\n#| warning: false\n \nsn_by_season <- season_by_temperature|>\n  filter(Year != 2023, Season != \"Summer\") |>\n  mutate(Season = factor(Season, labels = c(\"Осень\", \"Весна\", \"Зима\"))) |> \n  template(x=Year,\n           red_line=Sn_avg_roll_mean,\n           gray_line = Sn_avg,\n           blue_line = Sn_avg_roll_mean,\n           y_labs = \"Глубина снежного покрова, см\",\n           col_or_line = \"col\",\n           color_of_col = \"#4682B4\")+\n  facet_wrap(.~Season, scales = \"free_y\")\n\nprint(sn_by_season)\n\n# ggsave(sn_by_season, file= \"images/climate/season/sn_by_season(by_temperature).png\", device = png,\n#        width = 2000, height = 1000, units = \"px\", bg = \"white\")\n```\n\n### Аномалии глубины снежного покрова\n\n```{r}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 14\n\nann_monthly_graph(seven_station_annualy,\n                  seven_station_monthly |>  filter(!(Month %in% (6:8))),\n                  station = \"bakhta\",\n                  x=Year,\n                  red_line=Sn_anomaly_roll_mean_from_1976,\n                  gray_line = Sn_anomaly,\n                  blue_line = Sn_anomaly_roll_mean,\n                  y_labs = \"Глубина снежного покрова, см\",\n                  prefix = \"sn_anomaly\",\n                  col_or_line = \"col\",\n                  color_of_col = \"#4682B4\",\n                  print_plot = T)\n```\n\n### Продолжительность сезонов (выделены по температурам)\n\n```{r}\n#| warning: false\n\nduration_of_season_by_temp <- season_by_temperature|>\n  filter(Year != 2023) |>\n  mutate(Season = factor(Season, labels = c(\"Осень\", \"Весна\", \"Лето\", \"Зима\"))) |> \n  ggplot(aes(Year, Duration_roll_mean))+\n  geom_col(aes(y = Duration), fill = \"lightblue\", alpha = 0.5)+\n  geom_line(aes(y = Duration_roll_mean), col = \"red\", linewidth = 1.2)+\n  facet_wrap(.~Season, scales = \"free_y\")+\n  theme_minimal()+\n  labs(x = \"Год\",\n       y = \"Продолжительность, дней\")\n\nprint(duration_of_season_by_temp)\n\n# ggsave(duration_of_season_by_temp, file= \"images/climate/season/duration_of_season_by_temp.png\", device = png,\n#        width = 2000, height = 1500, units = \"px\", bg = \"white\")\n```\n\n### Оттаивание-замерзание\n\n```{r}\n#| warning: false\n \nmelt_freeze_by_month_graph <- ggplot(melt_freeze_all_winter, aes(Year, Melt_freeze))+\n  geom_col()+\n  facet_wrap(.~Month)+\n  theme_minimal()+\n  labs(x=\"Год\",\n       y = 'Количество переходов \"замерзание-оттаивание\"')\n\nprint(melt_freeze_by_month_graph)\n\n# ggsave(melt_freeze_by_month_graph, file= \"images/climate/melt_freeze_by_month_graph.png\", device = png,\n#        width = 2481, height = 1500, units = \"px\", bg = \"white\")\n\n```\n\n### Количество дней с \"плохим\" снегом по всем станциям (с 2005 года)\n\n```{r}\n#| warning: false\n#| fig-width: 7\n#| fig-height: 10\n\nseven_station_graph <- bad_snow |> \n  mutate(Station = factor(Station, levels = c(\"Игарка\", \"Туруханск\", \"Верхнеимбатск\",\n                                              \"Бахта\", \"Бор\", \"Ворогово\", \"Ярцево\"))) |> \n  ggplot(aes(Year, count))+\n  geom_col(fill=\"lightblue\")+\n  facet_wrap(.~Station, ncol = 1)+\n  theme_bw()+\n  labs(x = \"Год\",\n       y = \"Количество дней, когда снег покрывал  <50% поверхности почвы\")+\n  coord_cartesian(xlim = c(2005,2023 ))+\n  theme_minimal()\n\nprint(seven_station_graph)\n\n# ggsave(seven_station_graph, filename=\"images/climate/bad_snow_by_station.png\",\n#        width = 1000, height = 2500, units = \"px\", bg = \"white\")  \n\n\n```\n","srcMarkdownNoYaml":"\n\nИсходный код всех необходимых графиков. Написаны шаблоны графиков, которые применяются к данным с различных метеостанций, затем графики сохраняются в отдельные png-файлы автоматически.\n\n### Шаг 1: Загрузка необходимых пакетов\n\n```{r}\n#| label: загрузка пакетов\n#| warning: false \nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(ggpmisc) # для добавления линии регрессии на график\n\n```\n\n### Шаг 2: Импортируем все необходимые csv\n\n```{r}\n#| warning: false \n# Import ------------------------------------------------------------------\nseven_station_monthly <- read_csv2(\"../initial_data/climate/cleaned/monthly_anomaly.csv\")\nseven_station_annualy <- read_csv2(\"../initial_data/climate/cleaned/annualy_anomaly.csv\")\n\nstation_name <- levels(as.factor(seven_station_annualy$Station))\n\n#Сезоны, выделенные по переходу температур/снега через 0\nseason_by_temperature <- read_csv2(\"../initial_data/climate/cleaned/season_by_temperature.csv\")\nseason_by_snow <- read_csv2(\"../initial_data/climate/cleaned/season_by_snow.csv\")\n\n#Оттаивание-замерзание\nmelt_freeze_all_winter <- read_csv2(\"../initial_data/climate/cleaned/melt_freeze_by_month.csv\")\n\n\n# Количество дней с \"плохим\" снежным покровом по всем станциям\nbad_snow <- read_csv2(\"../initial_data/climate/cleaned/all_station_bad_snow.csv\")\n\n\n```\n\n### Шаблоны графиков\n\n```{r}\n#| warning: false\n# Templates ---------------------------------------------------------------\n# шаблон для графика\n# df - входной датасет\n# x - параметр, который будет отображаться по оси X \n# red_line - параметр для красной линии (линия линейной регрессии) и т.д.\n# y_labs - подпись к оси Y\n# col_or_line - график столбчатый или линейный?\n# см реальные примеры ниже\n\ntemplate <- function(df, x, red_line, gray_line, blue_line,\n                     y_labs, col_or_line, color_of_col){\n  \n  # Выбор: столбчатый или линейный график? \n  geometry <- function(col_or_line, color_of_col){\n    if (col_or_line == \"col\"){\n      list(geom_col(aes(y={{ gray_line }}), alpha=0.2, fill = color_of_col))\n    }\n    else {\n      list(geom_line(aes({{ x }}, {{ gray_line }}), alpha = 0.2))\n    }\n  }\n  \n  ggplot(df, aes(x = {{ x }}, y = {{ red_line }}))+\n    geometry(col_or_line, color_of_col)+\n    geom_line(aes({{ x }}, {{ blue_line }}), color = \"#4682B4\", linewidth = 1.1)+\n    stat_poly_line(color = \"red\", alpha = 0.5, na.rm = T)+\n    stat_poly_eq(use_label(\"eq\"), na.rm = T)+\n    stat_poly_eq(use_label(c(\"R2\",\"p\")), label.y = 0.9, na.rm = T)+\n    theme_minimal()+\n    labs(x = \"Год\",\n         y = y_labs)+\n    scale_y_continuous(labels = scales::label_number(accuracy = 1))\n}\n\n\n# график, когда сверху на всю ширину годовые значения,\n# а ниже панелями - среднемесячные\n# графики будут сохранены в папки внутри images\n# кроме того, сохраняет параметры линии тренда в отдельные csv \n# путь см в теле функции\n# выдаст ошибку, если требуемых папок не существует\n# df_annualy - датафрейм с годовыми значениями\n# df_monthly - датафрейм с месячными значениями\n# station - название станции (датафрейм фильтруется по названиям станций,\n# оно также фигурирует в названии выходных файлов)\n# остальные аргументы требуются для образца template (функция выше)\n# кроме prefix - фигурирует в именах выходных папок, чтобы не запутаться\n# и print_plot - показывать (T) или нет(F, default) график в RSTudio?\n\nann_monthly_graph <- function(df_annualy, df_monthly, station, x,\n                    red_line, gray_line, blue_line, y_labs, prefix,\n                    col_or_line, color_of_col = \"black\",\n                    print_plot = F){\n  \n  annualy <- df_annualy |> \n    filter(Station == station) |> \n    filter(Year != 2023) |>\n    template(x = {{x}},\n             red_line = {{ red_line }},\n             gray_line = {{ gray_line }},\n             blue_line  = {{ blue_line }},\n             y_labs = y_labs,\n             col_or_line = col_or_line,\n             color_of_col = color_of_col)+\n    labs(x = NULL,\n         y = NULL)\n  \n  monthly <- df_monthly |> \n    filter(Station == station) |>\n    filter(Year != 2023) |>\n    template(x = {{x}},\n             red_line = {{ red_line }},\n             gray_line = {{ gray_line }},\n             blue_line  = {{ blue_line }},\n             y_labs = y_labs,\n             col_or_line = col_or_line,\n             color_of_col = color_of_col)+\n    facet_wrap(.~Month, scales = \"free\")+\n    theme(axis.text.x = element_text(angle = 60))\n  \n  total_graph <- annualy / monthly +\n    plot_layout(heights = c(1, 3))\n  \n  \n  \n  # ggsave(total_graph, file= paste(\"images/climate/\", prefix, \"/\", station, \"_\",  prefix, \"_graph.png\", sep=\"\"),\n  #        device = png,\n  #        width = 2480, height = 3100, units = \"px\")\n  \n  print(paste(\"График для станции \", station, \" сохранен\"))\n  if(print_plot){\n    print(total_graph)\n  }\n  \n  #Выгрузка параметров линейного тренда\n  monthly_ <- ggplot_build(monthly)\n  monthly_parametr <- tibble(Month = levels(monthly_$data[[1]]$PANEL),\n                             RR = monthly_$data[[4]]$rr.label, \n                             EQ = monthly_$data[[4]]$eq.label,\n                             P = round(monthly_$data[[4]]$p.value, 5),\n                             Station = station) |>\n    separate_wider_delim(RR, delim='\"', names=c('x','r'), too_many = \"drop\" ) |> \n    mutate(b = str_sub(EQ, start = -20, end = -12)) |> \n    mutate(b = str_remove_all(b, \"[ +]\")) |> \n    mutate(b = str_remove(b, '^\\\\.')) |> \n    mutate(Parametr = prefix) |>\n    select(Station, Parametr, Month, RR = r, P, b) |> \n    mutate_all(type.convert, as.is = T)\n  \n # write_csv(monthly_parametr, file = paste(\"../initial_data/climate/cleaned/trends/monthly_\",                                            prefix, \"/\", station, \"_trends.csv\", sep = \"\"))\n  print(paste(\"параметры тренда по станции\", station,  \"сохранены в файл\"))\n}\n```\n\n### Средние температуры\n\n```{r}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 14\n\n# построит графики для всех метеостанций из вектора station_name:\n# station_name |> map(\\(x) ann_monthly_graph(df_annualy = seven_station_annualy,\n#                                            df_monthly = seven_station_monthly,\n#                                            station = x,\n#                                            x=Year,\n#                                            red_line=Tavg_roll_mean_from_1976,\n#                                            gray_line = Tavg,\n#                                            blue_line = Tavg_roll_mean,\n#                                            y_labs = \"Температура приземного воздуха, [\\u00B0C]\",\n#                                            prefix = \"tavg\",\n#                                            col_or_line = \"line\"), .progress=T)\n\n\n# пример графика\nann_monthly_graph(df_annualy = seven_station_annualy,\n                  df_monthly = seven_station_monthly,\n                  station = \"bakhta\",\n                  x=Year,\n                  red_line=Tavg_roll_mean_from_1976,\n                  gray_line = Tavg,\n                  blue_line = Tavg_roll_mean,\n                  y_labs = \"Температура приземного воздуха, [\\u00B0C]\",\n                  prefix = \"tavg\",\n                  col_or_line = \"line\",\n                  print_plot = T)\n```\n\n### Среднесезонные температуры (сезоны выделены по температурам)\n\n```{r}\n#| warning: false\n\n# данные есть только для 1 метеостанции, поэтому map не использую\ntavg_by_season <- season_by_temperature|>\n  filter(Year != 2023) |>\n  mutate(Season = factor(Season, labels = c(\"Осень\", \"Весна\", \"Лето\", \"Зима\"))) |> \n  template(x=Year,\n           red_line=Tavg_roll_mean,\n           gray_line = Tavg,\n           blue_line = Tavg_roll_mean,\n           y_labs = \"Температура приземного воздуха, [\\u00B0C]\",\n           col_or_line = \"line\")+\n  facet_wrap(.~Season, scales = \"free_y\")\n\nprint(tavg_by_season)\n\n# ggsave(tavg_by_season, file= \"images/climate/season/tavg_by_season(by_temperature).png\", device = png,\n#        width = 2000, height = 1500, units = \"px\", bg = \"white\")\n\n```\n\n### Температурные аномалии\n\n```{r}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 14\n\n# построит графики для всех метеостанций из вектора station_name:\n\n# station_name |> map(\\(x) ann_monthly_graph(seven_station_annualy,\n#                                  seven_station_monthly,\n#                                  station = x,\n#                                  x=Year,\n#                                  red_line=T_anomaly_roll_mean_from_1976,\n#                                  gray_line = T_anomaly,\n#                                  blue_line = T_anomaly_roll_mean,\n#                                  y_labs = \"Отклонения от среднего за 1961-1990 гг., [\\u00B0C]\",\n#                                  prefix = \"t_anomaly\",\n#                                  col_or_line = \"line\"), .progress=T)\n\n# пример графика\nann_monthly_graph(seven_station_annualy,\n                  seven_station_monthly,\n                  station = \"bakhta\",\n                  x=Year,\n                  red_line=T_anomaly_roll_mean_from_1976,\n                  gray_line = T_anomaly,\n                  blue_line = T_anomaly_roll_mean,\n                  y_labs = \"Отклонения от среднего за 1961-1990 гг., [\\u00B0C]\",\n                  prefix = \"t_anomaly\",\n                  col_or_line = \"line\",\n                  print_plot = T)\n```\n\n### Суммы осадков\n\n```{r}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 14\n\n# есть данные только по 1 станции, поэтому без map\nann_monthly_graph(seven_station_annualy,\n                                 seven_station_monthly,\n                                 station = \"bakhta\",\n                                 x=Year,\n                                 red_line=Pr_roll_mean_from_1976,\n                                 gray_line = Pr,\n                                 blue_line = Pr_roll_mean,\n                                 y_labs = \"Сумма осадков, мм\",\n                                 prefix = \"pr\",\n                                 col_or_line = \"col\",\n                                print_plot = T)\n```\n\n### Суммы осадков по сезонам\n\n```{r}\n#| warning: false\n\npr_by_season <- season_by_temperature|>\n  filter(Year != 2023) |>\n  mutate(Season = factor(Season, labels = c(\"Осень\", \"Весна\",\"Лето\", \"Зима\"))) |> \n  template(x=Year,\n           red_line=Pr_sum_roll_mean,\n           gray_line = Pr_sum,\n           blue_line = Pr_sum_roll_mean,\n           y_labs = \"Сумма осадков, мм\",\n           col_or_line = \"col\",\n           color_of_col = \"black\")+\n  facet_wrap(.~Season, scales = \"free_y\")\n\nprint(pr_by_season)\n\n# ggsave(pr_by_season, file= \"images/climate/season/pr_by_season(by_temperature).png\", device = png,\n#        width = 2000, height = 1600, units = \"px\", bg = \"white\")\n```\n\n### Аномалии осадков\n\n```{r}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 14\n\n# данные только для 1 метеостанции\nann_monthly_graph(seven_station_annualy,\n                  seven_station_monthly,\n                  station = \"bakhta\",\n                  x=Year,\n                  red_line=Pr_anomaly_roll_mean_from_1976,\n                  gray_line = Pr_anomaly,\n                  blue_line = Pr_anomaly_roll_mean,\n                  y_labs = \"Отклонения от среднего за 1961-1990 гг., мм\",\n                  prefix = \"pr_anomaly\",\n                  col_or_line = \"col\",\n                  print_plot = T)\n```\n\n### Глубина снежного покрова\n\n```{r}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 14\n\n# данные только для 1 метеостанции\nann_monthly_graph(seven_station_annualy,\n                  seven_station_monthly |>  filter(!(Month %in% (6:8))),\n                  station = \"bakhta\",\n                  x=Year,\n                  red_line=Sn_roll_mean_from_1976,\n                  gray_line = Sn,\n                  blue_line = Sn_roll_mean,\n                  y_labs = \"Глубина снежного покрова, см\",\n                  prefix = \"sn\",\n                  col_or_line = \"col\",\n                  color_of_col = \"#4682B4\",\n                  print_plot = T)\n```\n\n### Глубина снежного покрова по сезонам\n\n```{r}\n#| warning: false\n \nsn_by_season <- season_by_temperature|>\n  filter(Year != 2023, Season != \"Summer\") |>\n  mutate(Season = factor(Season, labels = c(\"Осень\", \"Весна\", \"Зима\"))) |> \n  template(x=Year,\n           red_line=Sn_avg_roll_mean,\n           gray_line = Sn_avg,\n           blue_line = Sn_avg_roll_mean,\n           y_labs = \"Глубина снежного покрова, см\",\n           col_or_line = \"col\",\n           color_of_col = \"#4682B4\")+\n  facet_wrap(.~Season, scales = \"free_y\")\n\nprint(sn_by_season)\n\n# ggsave(sn_by_season, file= \"images/climate/season/sn_by_season(by_temperature).png\", device = png,\n#        width = 2000, height = 1000, units = \"px\", bg = \"white\")\n```\n\n### Аномалии глубины снежного покрова\n\n```{r}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 14\n\nann_monthly_graph(seven_station_annualy,\n                  seven_station_monthly |>  filter(!(Month %in% (6:8))),\n                  station = \"bakhta\",\n                  x=Year,\n                  red_line=Sn_anomaly_roll_mean_from_1976,\n                  gray_line = Sn_anomaly,\n                  blue_line = Sn_anomaly_roll_mean,\n                  y_labs = \"Глубина снежного покрова, см\",\n                  prefix = \"sn_anomaly\",\n                  col_or_line = \"col\",\n                  color_of_col = \"#4682B4\",\n                  print_plot = T)\n```\n\n### Продолжительность сезонов (выделены по температурам)\n\n```{r}\n#| warning: false\n\nduration_of_season_by_temp <- season_by_temperature|>\n  filter(Year != 2023) |>\n  mutate(Season = factor(Season, labels = c(\"Осень\", \"Весна\", \"Лето\", \"Зима\"))) |> \n  ggplot(aes(Year, Duration_roll_mean))+\n  geom_col(aes(y = Duration), fill = \"lightblue\", alpha = 0.5)+\n  geom_line(aes(y = Duration_roll_mean), col = \"red\", linewidth = 1.2)+\n  facet_wrap(.~Season, scales = \"free_y\")+\n  theme_minimal()+\n  labs(x = \"Год\",\n       y = \"Продолжительность, дней\")\n\nprint(duration_of_season_by_temp)\n\n# ggsave(duration_of_season_by_temp, file= \"images/climate/season/duration_of_season_by_temp.png\", device = png,\n#        width = 2000, height = 1500, units = \"px\", bg = \"white\")\n```\n\n### Оттаивание-замерзание\n\n```{r}\n#| warning: false\n \nmelt_freeze_by_month_graph <- ggplot(melt_freeze_all_winter, aes(Year, Melt_freeze))+\n  geom_col()+\n  facet_wrap(.~Month)+\n  theme_minimal()+\n  labs(x=\"Год\",\n       y = 'Количество переходов \"замерзание-оттаивание\"')\n\nprint(melt_freeze_by_month_graph)\n\n# ggsave(melt_freeze_by_month_graph, file= \"images/climate/melt_freeze_by_month_graph.png\", device = png,\n#        width = 2481, height = 1500, units = \"px\", bg = \"white\")\n\n```\n\n### Количество дней с \"плохим\" снегом по всем станциям (с 2005 года)\n\n```{r}\n#| warning: false\n#| fig-width: 7\n#| fig-height: 10\n\nseven_station_graph <- bad_snow |> \n  mutate(Station = factor(Station, levels = c(\"Игарка\", \"Туруханск\", \"Верхнеимбатск\",\n                                              \"Бахта\", \"Бор\", \"Ворогово\", \"Ярцево\"))) |> \n  ggplot(aes(Year, count))+\n  geom_col(fill=\"lightblue\")+\n  facet_wrap(.~Station, ncol = 1)+\n  theme_bw()+\n  labs(x = \"Год\",\n       y = \"Количество дней, когда снег покрывал  <50% поверхности почвы\")+\n  coord_cartesian(xlim = c(2005,2023 ))+\n  theme_minimal()\n\nprint(seven_station_graph)\n\n# ggsave(seven_station_graph, filename=\"images/climate/bad_snow_by_station.png\",\n#        width = 1000, height = 2500, units = \"px\", bg = \"white\")  \n\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"6_graphs.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","editor":"visual","theme":"cosmo","title":"Графики","author":"Vasily Yakushov"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
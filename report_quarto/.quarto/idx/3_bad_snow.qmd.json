{"title":"Расчет количества дней с неблагоприятными условиями","markdown":{"yaml":{"title":"Расчет количества дней с неблагоприятными условиями","author":"Vasily Yakushov","format":{"html":{"code-fold":true,"code-tools":true}}},"headingText":"Шаг 1: Загрузка пакетов","containsRefs":false,"markdown":"\n\nНеобходимо было вычислить количество дней с неблагоприятным (для мелких млекопитающих) снежным покровом и посмотреть их распределение по временам года.\n\n\n```{r}\n#| label: Загрузка пакетов\n#| warning: false\nlibrary(tidyverse)\nlibrary(readxl)\n```\n\n### Шаг 2: Объявляем кастомные функции\n\n**bad_snow_count** - функция, которая определяет количество дней с \"плохим\" снежным покровом за весь зимний период. На вход принимает следующие аргументы:\\\n*df* - датафрейм со столбцами *Year, Month, Day, Sn_description*\\\n*quality* - фильтр значений качества снега (на вход одно значение или вектор из значений) На выходе датафрейм с количеством дней, когда снег был заданного качества, за зимний период\n\n```{r}\n#| label: Функции\n#| warning: false\n\n\nbad_snow_count <- function(df, quality){\n  # фильтрация данных с сентября по декабрь. Год прибавляет +1, так как впоследствии это количество будет суммироваться с данными следующего года (зимний период захватывает прошлый и последующий годы)\n  sep_dec <- df |> \n    filter(Month %in% c(9:12), Sn_description %in% quality) |> \n    group_by(Year, Station) |> \n    summarise(N = n()) |> \n    mutate(Year =Year+1)\n  # данные с января по май\n  jan_may <- df |> \n    filter(Month %in% c(1:5), Sn_description %in% quality) |> \n    group_by(Year, Station) |> \n    summarise(N = n())\n  \n  # Джойн таблиц, заполнение пропусков нулями, расчет общего количества неблагоприятных дней за всю зиму\n  \n  total <-  sep_dec |> \n    full_join(jan_may, by = c(\"Year\", \"Station\")) |> \n    mutate(N.x=ifelse(is.na(N.x),0, N.x)) |> \n    mutate(N.y=ifelse(is.na(N.y),0, N.y)) |> \n    mutate(count = (N.x+N.y)) |> \n    rename(First_half = N.x, Last_half = N.y)\n  \n  return(total)\n  \n}\n```\n\n### Шаг 3: Импорт данных\n\n```{r}\n#| label: Импорт\n#| warning: false\n\n# Import ------------------------------------------------------------------\nsnow_quality_data <- read_csv2(\"../initial_data/climate/cleaned/Bakhta_daily_problem_with_summer_1966-1976.csv\") |> \n  select(Year, Month, Day, Tavg, Sn_description)\n\n# 2005 - 2023 -------------------------------------------------------------\nsnow_quality_2005_2023 <- snow_quality_data |> \n  filter(Year > 2005 | (Year == 2005 & Month >1))\n\n```\n\n### Оценка данных о качественных характеристиках снежного покрова\n\nВсего 23 уровня, описывающие степень покрытия почвы снегом. До 2005 года уровень в баллах (1 балл = 10% покрытия). С 2005 года описание текстовое\n\n```{r}\n#| label: уровни фактора\n#| warning: false\n\nlevels(as.factor(snow_quality_data$Sn_description))\n```\n\nПолная информация для текущей задачи неважна. Нужно выделить 2 уровня фактора: когда снег \"хороший\" и когда \"плохой\". Сначала сделаем это для данных с 2005 года\n\n```{r}\n#| warning: false\ns <- levels(as.factor(snow_quality_data$Sn_description))[c(16,20,17)] # Отбор уровней фактора, когда снег = лед, или снег не покрывает всю поверхность почвы\n\nsnow_quality_2005_2023 <- snow_quality_2005_2023 |> \n  mutate(Sn_description = ifelse(Sn_description %in% s,1,0)) |>  # 1 - если снег \"плохой\"\n  select(Year, Month, Day,Tavg,  Sn_description) |> \n  mutate(Station = \"bakhta\")\nrm(s, snow_quality_data)\n```\n\nА теперь для данных до 2005 года (отберем только те дни, когда степень покрытия меньше 50% и данные о снежном покрове верны)\n\n```{r}\n#| warning: false\n\n# 1961-2005 ---------------------------------------------------------------\ntavg_1961_2004 <- read_excel(\"../initial_data/climate/1961_2005/23776_TTTR.xlsx\") |> \n  select(\n    Year = год,\n    Month = месяц,\n    Day = день,\n    Tavg = Тср)\n\nsnow_quality_1961_2004 <- read.csv2(\"../initial_data/climate/1961_2005/23776_snow.csv\", fileEncoding = \"windows-1251\") |>\n  select(\n    Station = Станция,\n    Year = Год,\n    Month = Месяц,\n    Day = День,\n    Sn = Высота_снежного_покрова,\n    Sn_description = Снежный_покров_.степень_покрытия,\n    Q1,\n    Q2,\n    Q3\n  )|> \n  filter(Q1 == 0) |> # по описанию данных 0 - данные о снежном покрове верные\n  filter(Sn_description != 99) |>\n  mutate(Sn_description = ifelse(Sn_description <= 5,1,0)) |> \n  left_join(tavg_1961_2004, by = c(\"Year\", \"Month\", \"Day\")) |> \n  select(Year, Month, Day, Tavg, Sn_description) |> \n  mutate(Station = \"bakhta\")\n```\n\nОбъединим данные (только для Бахты есть полный временной ряд с 1961 года)\n\n```{r}\n#| warning: false\n\n\n\nbad_snow_bakhta <- rbind(bad_snow_count(snow_quality_1961_2004, quality = 1),\n                         bad_snow_count(snow_quality_2005_2023, quality = 1)) |> \n  mutate(Station = \"bakhta\")\n\n\nrm(snow_quality_1961_2004, snow_quality_2005_2023, tavg_1961_2004)\n\n```\n\nТеперь посчитам количество неблагоприятных дней для оставшихся станций (с 2005 года). Объединим данные по всем метеостанциям и сохраним в csv.\n\n```{r}\n#| label: Количество \"плохих\" снежных дней по всем станциям \n#| warning: false\n\n# в колонке Sn описание снежного покрова для каждого дня\n# Бывает, что в один и тот же день было несколько разных описаний\n# если встречается в пределах одного дня покрытие меньше половины и больше половины, значит снег выпал, появилось укрытие\n# в течение 1 дня, поэтому этот день, теоретически, пережить проще, чем в течение целого дня плохой снег\n# Отберем уровни, когда строго меньше половины поверхности, или лед (без вариаций)\nsix_station_snow <- read_csv2(\"../initial_data/climate/cleaned/snow_quality_six_station.csv\")\n\n#21 век 6 станций\nbad_condition <- levels(as.factor(six_station_snow$Sn_description))[c(6,8,11,\n                                                                      19, 21, 24)]\nsix_station_snow <- six_station_snow |> \n  filter(Month %in% c(1:5, 9:12)) |> \n  mutate(Sn_description = ifelse(Sn_description %in% bad_condition, 1, 0)) |> \n  mutate(Station = factor(Station, levels = c(\"igarka\", \"turukhansk\", \"verkhneimbatsk\",\n                                              \"bor\", \"vorogovo\", \"yartsevo\"))) |> \n  group_by(Station) |> \n  bad_snow_count(quality = 1)\n\nseven_station <- rbind(six_station_snow, bad_snow_bakhta) |> \n  ungroup() |> \n  mutate(Station = case_when(\n    Station == \"igarka\" ~ \"Игарка\",\n    Station == \"turukhansk\" ~ \"Туруханск\",\n    Station == \"verkhneimbatsk\" ~ \"Верхнеимбатск\",\n    Station == \"bakhta\" ~ \"Бахта\",\n    Station == \"bor\" ~\"Бор\",\n    Station == \"vorogovo\" ~ \"Ворогово\",\n    Station == \"yartsevo\" ~ \"Ярцево\"\n  )) |> \n  mutate(Station = factor(Station, levels = c(\"Игарка\", \"Туруханск\", \"Верхнеимбатск\",\n                                              \"Бахта\", \"Бор\", \"Ворогово\", \"Ярцево\")))\n\n#write_csv2(seven_station, \"../initial_data/climate/cleaned/all_station_bad_snow.csv\")\n\n```\n","srcMarkdownNoYaml":"\n\nНеобходимо было вычислить количество дней с неблагоприятным (для мелких млекопитающих) снежным покровом и посмотреть их распределение по временам года.\n\n### Шаг 1: Загрузка пакетов\n\n```{r}\n#| label: Загрузка пакетов\n#| warning: false\nlibrary(tidyverse)\nlibrary(readxl)\n```\n\n### Шаг 2: Объявляем кастомные функции\n\n**bad_snow_count** - функция, которая определяет количество дней с \"плохим\" снежным покровом за весь зимний период. На вход принимает следующие аргументы:\\\n*df* - датафрейм со столбцами *Year, Month, Day, Sn_description*\\\n*quality* - фильтр значений качества снега (на вход одно значение или вектор из значений) На выходе датафрейм с количеством дней, когда снег был заданного качества, за зимний период\n\n```{r}\n#| label: Функции\n#| warning: false\n\n\nbad_snow_count <- function(df, quality){\n  # фильтрация данных с сентября по декабрь. Год прибавляет +1, так как впоследствии это количество будет суммироваться с данными следующего года (зимний период захватывает прошлый и последующий годы)\n  sep_dec <- df |> \n    filter(Month %in% c(9:12), Sn_description %in% quality) |> \n    group_by(Year, Station) |> \n    summarise(N = n()) |> \n    mutate(Year =Year+1)\n  # данные с января по май\n  jan_may <- df |> \n    filter(Month %in% c(1:5), Sn_description %in% quality) |> \n    group_by(Year, Station) |> \n    summarise(N = n())\n  \n  # Джойн таблиц, заполнение пропусков нулями, расчет общего количества неблагоприятных дней за всю зиму\n  \n  total <-  sep_dec |> \n    full_join(jan_may, by = c(\"Year\", \"Station\")) |> \n    mutate(N.x=ifelse(is.na(N.x),0, N.x)) |> \n    mutate(N.y=ifelse(is.na(N.y),0, N.y)) |> \n    mutate(count = (N.x+N.y)) |> \n    rename(First_half = N.x, Last_half = N.y)\n  \n  return(total)\n  \n}\n```\n\n### Шаг 3: Импорт данных\n\n```{r}\n#| label: Импорт\n#| warning: false\n\n# Import ------------------------------------------------------------------\nsnow_quality_data <- read_csv2(\"../initial_data/climate/cleaned/Bakhta_daily_problem_with_summer_1966-1976.csv\") |> \n  select(Year, Month, Day, Tavg, Sn_description)\n\n# 2005 - 2023 -------------------------------------------------------------\nsnow_quality_2005_2023 <- snow_quality_data |> \n  filter(Year > 2005 | (Year == 2005 & Month >1))\n\n```\n\n### Оценка данных о качественных характеристиках снежного покрова\n\nВсего 23 уровня, описывающие степень покрытия почвы снегом. До 2005 года уровень в баллах (1 балл = 10% покрытия). С 2005 года описание текстовое\n\n```{r}\n#| label: уровни фактора\n#| warning: false\n\nlevels(as.factor(snow_quality_data$Sn_description))\n```\n\nПолная информация для текущей задачи неважна. Нужно выделить 2 уровня фактора: когда снег \"хороший\" и когда \"плохой\". Сначала сделаем это для данных с 2005 года\n\n```{r}\n#| warning: false\ns <- levels(as.factor(snow_quality_data$Sn_description))[c(16,20,17)] # Отбор уровней фактора, когда снег = лед, или снег не покрывает всю поверхность почвы\n\nsnow_quality_2005_2023 <- snow_quality_2005_2023 |> \n  mutate(Sn_description = ifelse(Sn_description %in% s,1,0)) |>  # 1 - если снег \"плохой\"\n  select(Year, Month, Day,Tavg,  Sn_description) |> \n  mutate(Station = \"bakhta\")\nrm(s, snow_quality_data)\n```\n\nА теперь для данных до 2005 года (отберем только те дни, когда степень покрытия меньше 50% и данные о снежном покрове верны)\n\n```{r}\n#| warning: false\n\n# 1961-2005 ---------------------------------------------------------------\ntavg_1961_2004 <- read_excel(\"../initial_data/climate/1961_2005/23776_TTTR.xlsx\") |> \n  select(\n    Year = год,\n    Month = месяц,\n    Day = день,\n    Tavg = Тср)\n\nsnow_quality_1961_2004 <- read.csv2(\"../initial_data/climate/1961_2005/23776_snow.csv\", fileEncoding = \"windows-1251\") |>\n  select(\n    Station = Станция,\n    Year = Год,\n    Month = Месяц,\n    Day = День,\n    Sn = Высота_снежного_покрова,\n    Sn_description = Снежный_покров_.степень_покрытия,\n    Q1,\n    Q2,\n    Q3\n  )|> \n  filter(Q1 == 0) |> # по описанию данных 0 - данные о снежном покрове верные\n  filter(Sn_description != 99) |>\n  mutate(Sn_description = ifelse(Sn_description <= 5,1,0)) |> \n  left_join(tavg_1961_2004, by = c(\"Year\", \"Month\", \"Day\")) |> \n  select(Year, Month, Day, Tavg, Sn_description) |> \n  mutate(Station = \"bakhta\")\n```\n\nОбъединим данные (только для Бахты есть полный временной ряд с 1961 года)\n\n```{r}\n#| warning: false\n\n\n\nbad_snow_bakhta <- rbind(bad_snow_count(snow_quality_1961_2004, quality = 1),\n                         bad_snow_count(snow_quality_2005_2023, quality = 1)) |> \n  mutate(Station = \"bakhta\")\n\n\nrm(snow_quality_1961_2004, snow_quality_2005_2023, tavg_1961_2004)\n\n```\n\nТеперь посчитам количество неблагоприятных дней для оставшихся станций (с 2005 года). Объединим данные по всем метеостанциям и сохраним в csv.\n\n```{r}\n#| label: Количество \"плохих\" снежных дней по всем станциям \n#| warning: false\n\n# в колонке Sn описание снежного покрова для каждого дня\n# Бывает, что в один и тот же день было несколько разных описаний\n# если встречается в пределах одного дня покрытие меньше половины и больше половины, значит снег выпал, появилось укрытие\n# в течение 1 дня, поэтому этот день, теоретически, пережить проще, чем в течение целого дня плохой снег\n# Отберем уровни, когда строго меньше половины поверхности, или лед (без вариаций)\nsix_station_snow <- read_csv2(\"../initial_data/climate/cleaned/snow_quality_six_station.csv\")\n\n#21 век 6 станций\nbad_condition <- levels(as.factor(six_station_snow$Sn_description))[c(6,8,11,\n                                                                      19, 21, 24)]\nsix_station_snow <- six_station_snow |> \n  filter(Month %in% c(1:5, 9:12)) |> \n  mutate(Sn_description = ifelse(Sn_description %in% bad_condition, 1, 0)) |> \n  mutate(Station = factor(Station, levels = c(\"igarka\", \"turukhansk\", \"verkhneimbatsk\",\n                                              \"bor\", \"vorogovo\", \"yartsevo\"))) |> \n  group_by(Station) |> \n  bad_snow_count(quality = 1)\n\nseven_station <- rbind(six_station_snow, bad_snow_bakhta) |> \n  ungroup() |> \n  mutate(Station = case_when(\n    Station == \"igarka\" ~ \"Игарка\",\n    Station == \"turukhansk\" ~ \"Туруханск\",\n    Station == \"verkhneimbatsk\" ~ \"Верхнеимбатск\",\n    Station == \"bakhta\" ~ \"Бахта\",\n    Station == \"bor\" ~\"Бор\",\n    Station == \"vorogovo\" ~ \"Ворогово\",\n    Station == \"yartsevo\" ~ \"Ярцево\"\n  )) |> \n  mutate(Station = factor(Station, levels = c(\"Игарка\", \"Туруханск\", \"Верхнеимбатск\",\n                                              \"Бахта\", \"Бор\", \"Ворогово\", \"Ярцево\")))\n\n#write_csv2(seven_station, \"../initial_data/climate/cleaned/all_station_bad_snow.csv\")\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"3_bad_snow.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","editor":"visual","theme":"cosmo","title":"Расчет количества дней с неблагоприятными условиями","author":"Vasily Yakushov"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
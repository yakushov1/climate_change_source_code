{"title":"Расчет среднемесячных значений температур и данных о снежном покрове для остальных станций","markdown":{"yaml":{"title":"Расчет среднемесячных значений температур и данных о снежном покрове для остальных станций","author":"Vasily Yakushov","format":{"html":{"code-fold":true,"code-tools":true}}},"headingText":"Шаг 1: Импорт необходимых пакетов.","containsRefs":false,"markdown":"\n\nДанные с ближайшей метеостанции (п. Бахта) были проанализированы на предыдущем шаге. Здесь получим данные с других 6 метеостанций.\\\nК сожалению, таких данных гораздо меньше и формат отличается, поэтому обработка тоже будет отличаться.\\\nНа выходе получаем большие таблицы, где для каждой станции рассчитаны среднемесячные и среднегодовые температуры, суммы осадков, глубины снежного покрова и аномалии (то есть отклонения от среднего базового за 1961-1990) для каждого параметра. Также рассчитаны средние базовые значения, средние за 2013-2022, стандартные ошибки среднего, скользящее среднее за 1976-2023.\\\n\n\n```{r}\n#| label: Загрузка пакетов\n#| warning: false\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(VIM) #для визуализации пропусков\nlibrary(rvest) #для копирования таблицы из веба\nlibrary(pracma) #для подсчета скользящей средней\n```\n\n### Шаг 2: Объявление кастомных функций.\n\n**reading_XXI** - функция, по своей сути напоминающая функцию **read_files** с предыдущего шага, с некоторыми отличиями. Например, в столбце Station сохраняется название метеостанции (загружается из названия файла)\n\n```{r}\n#| label: reading_XXI\n#| warning: false\n\nreading_XXI <- function(name_of_df){\n  result <- read_excel(name_of_df) |> \n    select(1,2,28) |> \n    rename(Local_time = 1) |> \n    mutate(Local_time = as_datetime(Local_time, format=\"%d.%m.%Y %R\")) |> \n    mutate(Year = year(Local_time),\n           Month = month(Local_time),\n           Day = mday(Local_time)) |> \n    rename(Sn = \"E'\",\n           Tavg = \"T\") |>\n    group_by(Year, Month, Day) |> \n    summarise(Sn = as.factor(str_flatten(Sn, \", \", na.rm = T)),\n              Tavg = mean(Tavg, na.rm=T)) |> \n    arrange(Year, Month, Day) |> \n    mutate(Station = str_match(name_of_df, \"station/(.*?).xls\")[2])\n  return(result)\n}\n```\n\n**reading_XX** - простая функция для считывания txt-файлов. Вынесена в отдельную функцию, чтобы было удобнее оборачивать в map.\\\n**parsing_html_table** - функция для считывания таблиц из html-файлов (гораздо удобнее, чем копировать и вставлять в excel вручную)\\\nЕсть еще парочка функций для расчета стандартного отклонения и скользящего среднего.\n\n```{r}\n#| label: Оставшиеся функции\n#| warning: false\n\nreading_XX <- function(x){read_table2(x, col_names = F)}\n\nparsing_html_table <- function(http){\n  df <- read_html(http)\n  year <- df |> \n    html_element(\".chronicle-table-left-column\") |> \n    html_table() |> \n    slice(-1)\n  temper <- df |> \n    html_element(\".chronicle-table\") |> \n    html_table() |> \n    slice(-1)\n  \n  result <- cbind(year, temper)\n  colnames(result) <- c(\"Year\", c(1:12), \"annualy\")\n  result <- result |> \n    select(-annualy) |> \n    pivot_longer(-Year, values_to = \"Tavg\", names_to = \"Month\") |> \n    filter(Year %in% c(1961:2004) | (Year == 2005 & Month==1)) |> \n    mutate_at(c(1:3), .funs=as.numeric)\n  return(result)\n}\n\n\nstd <- function(x){ sd(x)/sqrt(length(x)) } # Стандартная ошибка - стандартное отклонение/квадратный корень из числа наблюдений\n# exponential_smooth <- function(x) { es(x, model=\"AAdN\",h=8,holdout=FALSE,cfType=\"MSE\")$fitted}\nmeans_smooth <- function(x, n) {\n  pracma::movavg(x, n=10, type=c(\"s\"))\n}\n\n\n```\n\n### Шаг 3: Импорт файлов\n\nИмпортируем данные за 2005-2023 гг., осредним до суточного разрешения и проверим их на пропуски.\n\n```{r}\n#| label: Импорт\n#| warning: false\n\n# Данные 2005-2023 (6 станций(без бахты)) суточное разрешение ----------------------------------------------\npaths <- list.files(\"../initial_data/climate/2005_2023_seven_station\", pattern = \"[.]xls$\", full.names = TRUE)\n\nsix_station_2005_2023 <- paths |>\n  map_dfr(reading_XXI)\nrm(reading_XXI, paths)\naggr(six_station_2005_2023, prop = F, numbers = T) #отлично, пропусков нет\n```\n\nТеперь осредним до месячного разрешения.\n\n```{r}\n#| label: Осреднение до месячного разрешения\n#| warning: false\n\nsix_station_2005_2023_monthly <- six_station_2005_2023 |> \n  group_by(Station, Year, Month) |> \n  summarise(Tavg = mean(Tavg))\n```\n\nИмпортируем данные с 1961 года (они изначально месячного разрешения, источник - МЦД)\n\n```{r}\n#| label: температура Обнинск (месячное разрешение) 4 станции \n#| warning: false\n\npaths <- list.files(\"../initial_data/climate/monthly_all_station/\", pattern = \"[.]txt$\", full.names = TRUE) # Просканировали все файлы в директории\nfour_station_obninsk <- paths |>\n  map(reading_XX) |>\n  list_rbind() |> \n  rename(Station = X1) |> \n  mutate(Station = case_when(\n    Station == \"23274\" ~\"igarka\",\n    Station == \"23678\" ~ \"verkhneimbatsk\",\n    Station == \"23472\" ~ \"turukhansk\",\n    .default = \"bor\"))\ncolnames(four_station_obninsk) <- c(\"Station\", \"Year\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\",\"8\", \"9\", \"10\", \"11\", \"12\")\n\nrm(paths)\n\nfour_station_obninsk <- four_station_obninsk |> \n  pivot_longer(-c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |> \n  mutate(Month = as.numeric(Month)) |> \n  filter(Year %in% c(1961:2004) | (Year == 2005 & Month==1))\n\n```\n\nНайдем данные об оставшихся двух метеостанциях. Загрузка парсингом веб-страниц.\n\n```{r}\n#| label: Ворогово и ярцево (из интернета)\n#| warning: false\n\n#  ----------------------------------------\nvorogovo <- parsing_html_table(\"http://www.pogodaiklimat.ru/history/23973.htm\") |>\n  mutate(Station = \"vorogovo\")\nyartsevo <- parsing_html_table(\"http://www.pogodaiklimat.ru/history/23987.htm\") |> \n  mutate(Station = \"yartsevo\")\n```\n\nОбъединим данные со всех метеостанций в 1 датафрейм. Добавим в тот же датафрейм осредненную по всем метеостанциям информацию. Описание снежного покрова по 6 станциям сохраним в отдельный csv. Удалим промежуточные переменные.\n\n```{r}\n#| label: Объединение данных\n#| warning: false\n\n# 6 станций (кроме Бахты). Данных об осадках и глубине снега нет.\nsix_station <- rbind(six_station_2005_2023_monthly, four_station_obninsk, vorogovo, yartsevo) |> \n  arrange(Station, Year, Month) |> \n  filter(Year %in% c(1961:2022) | (Year %in% c(1961:2023) & Month <7)) |> \n  mutate(Pr = NA, Sn = NA) |> \n  select(Station, Year, Month, Tavg, Pr, Sn)\n\n# предобработанные ранее данные из Бахты\nbakhta_monthly <- read_csv2(\"../initial_data/climate/cleaned/Bakhta_monthly_1966-1976_replaced_by_average_Bor_Verkhn.csv\") |> \n  mutate(Station = \"bakhta\") |>  \n  select(Station, Year, Month, Tavg, Pr, Sn)\n\n# данные по всем метеостанциям\nall_station <- rbind(six_station, bakhta_monthly) |> \n  arrange(Station, Year, Month)\n\n\naverage_temp_by_7_station <- all_station |> \n  group_by(Year, Month) |> \n  summarise(Tavg = mean(Tavg)) |> \n  mutate(Station = \"average_by_all_station\")\n\n# данные по всем метеостанциям + осредненные\nseven_station <- rbind(all_station, average_temp_by_7_station)\n\n\n# данные о характеристиках снега по 6 станциям (кроме Бахты)\nsnow_quality_six_station <- six_station_2005_2023 |> \n  select(-Tavg) |> \n  rename(Sn_description = Sn)\n\n#write_csv2(snow_quality_six_station, \"../initial_data/climate/cleaned/snow_quality_six_station.csv\")\n\nrm(all_station, average_temp_by_7_station, bakhta_monthly, four_station_obninsk, six_station,\n   six_station_2005_2023,    six_station_2005_2023_monthly, vorogovo, yartsevo)\n\n```\n\n### Шаг 4: Расчет аномалий, скользящего среднего и т.д.\n\nАномалии были рассчитаны как отклонения от среднего значения на базовом (1961-1990) периоде. Финальные датафреймы сохранены в csv-файлы. См. комментарии в коде\n\n```{r}\n#| warning: false\n# Расчет аномалий, среднего базового и тд ---------------------------------\n# Осреднение --------------------------------------------------------------\nannualy_T_avg_Pr <- seven_station |> \n  rename(T_=Tavg) |> # не менять, иначе не будут считаться SE\n  group_by(Station, Year) |> \n  summarise(Tavg = mean(T_),\n            Tavg_SE = std(T_),\n            Pr = sum(Pr)) # SE для Pr не считаем, так как там не среднее, а сумма\n\n#Для снежного покрова сделаем отдельный расчет среднегодового, не учитывая летние месяцы\nannualy_Sn <- seven_station |> \n  rename(Sn_=Sn) |> # не менять, иначе не будут считаться SE\n  filter(Month %in% c(1:5,9:12)) |> \n  group_by(Station, Year) |> \n  summarise(Sn = mean(Sn_),\n            Sn_SE = std(Sn_))\n\nannualy <- annualy_T_avg_Pr |> \n  left_join(annualy_Sn, by = c(\"Station\", \"Year\"))\n\nrm(annualy_Sn, annualy_T_avg_Pr, six_station_monthly, Bakhta_monthly, tavg_by_seven_station)\n\n\n# Расчет базовых (опорных) значений ---------------------------------------\nbase_annualy <- annualy |> \n  filter(Year %in% c(1961:1990)) |> \n  group_by(Station) |> \n  summarise(across(c(Tavg, Sn, Pr), list(\n    base = mean,\n    base_SE = std\n  )))\n\nbase_monthly <- seven_station |> \n  filter(Year %in% c(1961:1990)) |> \n  group_by(Station, Month) |> \n  summarise(across(c(Tavg, Sn, Pr), list(\n    base = mean,\n    base_SE = std\n  )))\n\n# Средние значения за последнее десятилетие -------------------------------\n\nlast_decade_annualy <- annualy |> \n  filter(Year %in% c(2013:2022)) |>  #2023 год не берем, так как нет полных данных\n  group_by(Station) |> \n  summarise(across(c(Tavg, Sn, Pr), list(\n    last_decade = mean,\n    last_decade_SE = std\n  )))\n\nlast_decade_monthly <- seven_station |> \n  filter(Year %in% c(2013:2022)) |> \n  group_by(Station, Month) |>\n  summarise(across(c(Tavg, Sn, Pr), list(\n    last_decade = mean,\n    last_decade_SE = std\n  )))\n\n# Расчет аномалий, скользящего среднего, линейного тренда с 1976 года и разницы между базовой и последним десятилетием --------\nannualy_anomaly <- annualy |> \n  left_join(base_annualy, by = \"Station\") |> \n  group_by(Station) |> \n  mutate(T_anomaly = Tavg-Tavg_base,\n         Sn_anomaly = Sn-Sn_base,\n         Pr_anomaly = Pr-Pr_base) |> \n  left_join(last_decade_annualy, by = \"Station\") |> \n  mutate(T_diff = Tavg_last_decade-Tavg_base,\n         Sn_diff = Sn_last_decade-Sn_base,\n         Pr_diff = Pr_last_decade-Pr_base) |> \n  mutate(across(c(T_anomaly, Pr_anomaly, Sn_anomaly, Tavg, Pr, Sn), list(\n    roll_mean = means_smooth\n  ))) |>\n  mutate(across(contains(\"roll_mean\"),\n                list(from_1976 = \\(x) c(rep(NA, 15), x[16:length(x)])\n                )))\n\nmonthly_anomaly <- seven_station |> \n  left_join(base_monthly, by = c(\"Station\", \"Month\")) |> \n  group_by(Station, Month) |> \n  mutate(T_anomaly=Tavg-Tavg_base,\n         Sn_anomaly=Sn-Sn_base,\n         Pr_anomaly=Pr-Pr_base) |> \n  left_join(last_decade_monthly, by=c(\"Station\",\"Month\"))|> \n  mutate(T_diff = Tavg_last_decade-Tavg_base,\n         Sn_diff = Sn_last_decade-Sn_base,\n         Pr_diff = Pr_last_decade-Pr_base) |> \n  mutate(across(c(T_anomaly, Pr_anomaly, Sn_anomaly, Tavg, Pr, Sn), list(\n    roll_mean = means_smooth\n  ))) |>\n  mutate(across(contains(\"roll_mean\"),\n                list(from_1976 = \\(x) c(rep(NA, 15), x[16:length(x)])\n                )))\n\n#write_csv2(annualy_anomaly, \"../initial_data/climate/cleaned/annualy_anomaly.csv\")\n#write_csv2(monthly_anomaly, \"../initial_data/climate/cleaned/monthly_anomaly.csv\")\n\n\n\n\n```\n","srcMarkdownNoYaml":"\n\nДанные с ближайшей метеостанции (п. Бахта) были проанализированы на предыдущем шаге. Здесь получим данные с других 6 метеостанций.\\\nК сожалению, таких данных гораздо меньше и формат отличается, поэтому обработка тоже будет отличаться.\\\nНа выходе получаем большие таблицы, где для каждой станции рассчитаны среднемесячные и среднегодовые температуры, суммы осадков, глубины снежного покрова и аномалии (то есть отклонения от среднего базового за 1961-1990) для каждого параметра. Также рассчитаны средние базовые значения, средние за 2013-2022, стандартные ошибки среднего, скользящее среднее за 1976-2023.\\\n\n### Шаг 1: Импорт необходимых пакетов.\n\n```{r}\n#| label: Загрузка пакетов\n#| warning: false\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(VIM) #для визуализации пропусков\nlibrary(rvest) #для копирования таблицы из веба\nlibrary(pracma) #для подсчета скользящей средней\n```\n\n### Шаг 2: Объявление кастомных функций.\n\n**reading_XXI** - функция, по своей сути напоминающая функцию **read_files** с предыдущего шага, с некоторыми отличиями. Например, в столбце Station сохраняется название метеостанции (загружается из названия файла)\n\n```{r}\n#| label: reading_XXI\n#| warning: false\n\nreading_XXI <- function(name_of_df){\n  result <- read_excel(name_of_df) |> \n    select(1,2,28) |> \n    rename(Local_time = 1) |> \n    mutate(Local_time = as_datetime(Local_time, format=\"%d.%m.%Y %R\")) |> \n    mutate(Year = year(Local_time),\n           Month = month(Local_time),\n           Day = mday(Local_time)) |> \n    rename(Sn = \"E'\",\n           Tavg = \"T\") |>\n    group_by(Year, Month, Day) |> \n    summarise(Sn = as.factor(str_flatten(Sn, \", \", na.rm = T)),\n              Tavg = mean(Tavg, na.rm=T)) |> \n    arrange(Year, Month, Day) |> \n    mutate(Station = str_match(name_of_df, \"station/(.*?).xls\")[2])\n  return(result)\n}\n```\n\n**reading_XX** - простая функция для считывания txt-файлов. Вынесена в отдельную функцию, чтобы было удобнее оборачивать в map.\\\n**parsing_html_table** - функция для считывания таблиц из html-файлов (гораздо удобнее, чем копировать и вставлять в excel вручную)\\\nЕсть еще парочка функций для расчета стандартного отклонения и скользящего среднего.\n\n```{r}\n#| label: Оставшиеся функции\n#| warning: false\n\nreading_XX <- function(x){read_table2(x, col_names = F)}\n\nparsing_html_table <- function(http){\n  df <- read_html(http)\n  year <- df |> \n    html_element(\".chronicle-table-left-column\") |> \n    html_table() |> \n    slice(-1)\n  temper <- df |> \n    html_element(\".chronicle-table\") |> \n    html_table() |> \n    slice(-1)\n  \n  result <- cbind(year, temper)\n  colnames(result) <- c(\"Year\", c(1:12), \"annualy\")\n  result <- result |> \n    select(-annualy) |> \n    pivot_longer(-Year, values_to = \"Tavg\", names_to = \"Month\") |> \n    filter(Year %in% c(1961:2004) | (Year == 2005 & Month==1)) |> \n    mutate_at(c(1:3), .funs=as.numeric)\n  return(result)\n}\n\n\nstd <- function(x){ sd(x)/sqrt(length(x)) } # Стандартная ошибка - стандартное отклонение/квадратный корень из числа наблюдений\n# exponential_smooth <- function(x) { es(x, model=\"AAdN\",h=8,holdout=FALSE,cfType=\"MSE\")$fitted}\nmeans_smooth <- function(x, n) {\n  pracma::movavg(x, n=10, type=c(\"s\"))\n}\n\n\n```\n\n### Шаг 3: Импорт файлов\n\nИмпортируем данные за 2005-2023 гг., осредним до суточного разрешения и проверим их на пропуски.\n\n```{r}\n#| label: Импорт\n#| warning: false\n\n# Данные 2005-2023 (6 станций(без бахты)) суточное разрешение ----------------------------------------------\npaths <- list.files(\"../initial_data/climate/2005_2023_seven_station\", pattern = \"[.]xls$\", full.names = TRUE)\n\nsix_station_2005_2023 <- paths |>\n  map_dfr(reading_XXI)\nrm(reading_XXI, paths)\naggr(six_station_2005_2023, prop = F, numbers = T) #отлично, пропусков нет\n```\n\nТеперь осредним до месячного разрешения.\n\n```{r}\n#| label: Осреднение до месячного разрешения\n#| warning: false\n\nsix_station_2005_2023_monthly <- six_station_2005_2023 |> \n  group_by(Station, Year, Month) |> \n  summarise(Tavg = mean(Tavg))\n```\n\nИмпортируем данные с 1961 года (они изначально месячного разрешения, источник - МЦД)\n\n```{r}\n#| label: температура Обнинск (месячное разрешение) 4 станции \n#| warning: false\n\npaths <- list.files(\"../initial_data/climate/monthly_all_station/\", pattern = \"[.]txt$\", full.names = TRUE) # Просканировали все файлы в директории\nfour_station_obninsk <- paths |>\n  map(reading_XX) |>\n  list_rbind() |> \n  rename(Station = X1) |> \n  mutate(Station = case_when(\n    Station == \"23274\" ~\"igarka\",\n    Station == \"23678\" ~ \"verkhneimbatsk\",\n    Station == \"23472\" ~ \"turukhansk\",\n    .default = \"bor\"))\ncolnames(four_station_obninsk) <- c(\"Station\", \"Year\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\",\"8\", \"9\", \"10\", \"11\", \"12\")\n\nrm(paths)\n\nfour_station_obninsk <- four_station_obninsk |> \n  pivot_longer(-c(Station, Year), names_to = \"Month\", values_to = \"Tavg\") |> \n  mutate(Month = as.numeric(Month)) |> \n  filter(Year %in% c(1961:2004) | (Year == 2005 & Month==1))\n\n```\n\nНайдем данные об оставшихся двух метеостанциях. Загрузка парсингом веб-страниц.\n\n```{r}\n#| label: Ворогово и ярцево (из интернета)\n#| warning: false\n\n#  ----------------------------------------\nvorogovo <- parsing_html_table(\"http://www.pogodaiklimat.ru/history/23973.htm\") |>\n  mutate(Station = \"vorogovo\")\nyartsevo <- parsing_html_table(\"http://www.pogodaiklimat.ru/history/23987.htm\") |> \n  mutate(Station = \"yartsevo\")\n```\n\nОбъединим данные со всех метеостанций в 1 датафрейм. Добавим в тот же датафрейм осредненную по всем метеостанциям информацию. Описание снежного покрова по 6 станциям сохраним в отдельный csv. Удалим промежуточные переменные.\n\n```{r}\n#| label: Объединение данных\n#| warning: false\n\n# 6 станций (кроме Бахты). Данных об осадках и глубине снега нет.\nsix_station <- rbind(six_station_2005_2023_monthly, four_station_obninsk, vorogovo, yartsevo) |> \n  arrange(Station, Year, Month) |> \n  filter(Year %in% c(1961:2022) | (Year %in% c(1961:2023) & Month <7)) |> \n  mutate(Pr = NA, Sn = NA) |> \n  select(Station, Year, Month, Tavg, Pr, Sn)\n\n# предобработанные ранее данные из Бахты\nbakhta_monthly <- read_csv2(\"../initial_data/climate/cleaned/Bakhta_monthly_1966-1976_replaced_by_average_Bor_Verkhn.csv\") |> \n  mutate(Station = \"bakhta\") |>  \n  select(Station, Year, Month, Tavg, Pr, Sn)\n\n# данные по всем метеостанциям\nall_station <- rbind(six_station, bakhta_monthly) |> \n  arrange(Station, Year, Month)\n\n\naverage_temp_by_7_station <- all_station |> \n  group_by(Year, Month) |> \n  summarise(Tavg = mean(Tavg)) |> \n  mutate(Station = \"average_by_all_station\")\n\n# данные по всем метеостанциям + осредненные\nseven_station <- rbind(all_station, average_temp_by_7_station)\n\n\n# данные о характеристиках снега по 6 станциям (кроме Бахты)\nsnow_quality_six_station <- six_station_2005_2023 |> \n  select(-Tavg) |> \n  rename(Sn_description = Sn)\n\n#write_csv2(snow_quality_six_station, \"../initial_data/climate/cleaned/snow_quality_six_station.csv\")\n\nrm(all_station, average_temp_by_7_station, bakhta_monthly, four_station_obninsk, six_station,\n   six_station_2005_2023,    six_station_2005_2023_monthly, vorogovo, yartsevo)\n\n```\n\n### Шаг 4: Расчет аномалий, скользящего среднего и т.д.\n\nАномалии были рассчитаны как отклонения от среднего значения на базовом (1961-1990) периоде. Финальные датафреймы сохранены в csv-файлы. См. комментарии в коде\n\n```{r}\n#| warning: false\n# Расчет аномалий, среднего базового и тд ---------------------------------\n# Осреднение --------------------------------------------------------------\nannualy_T_avg_Pr <- seven_station |> \n  rename(T_=Tavg) |> # не менять, иначе не будут считаться SE\n  group_by(Station, Year) |> \n  summarise(Tavg = mean(T_),\n            Tavg_SE = std(T_),\n            Pr = sum(Pr)) # SE для Pr не считаем, так как там не среднее, а сумма\n\n#Для снежного покрова сделаем отдельный расчет среднегодового, не учитывая летние месяцы\nannualy_Sn <- seven_station |> \n  rename(Sn_=Sn) |> # не менять, иначе не будут считаться SE\n  filter(Month %in% c(1:5,9:12)) |> \n  group_by(Station, Year) |> \n  summarise(Sn = mean(Sn_),\n            Sn_SE = std(Sn_))\n\nannualy <- annualy_T_avg_Pr |> \n  left_join(annualy_Sn, by = c(\"Station\", \"Year\"))\n\nrm(annualy_Sn, annualy_T_avg_Pr, six_station_monthly, Bakhta_monthly, tavg_by_seven_station)\n\n\n# Расчет базовых (опорных) значений ---------------------------------------\nbase_annualy <- annualy |> \n  filter(Year %in% c(1961:1990)) |> \n  group_by(Station) |> \n  summarise(across(c(Tavg, Sn, Pr), list(\n    base = mean,\n    base_SE = std\n  )))\n\nbase_monthly <- seven_station |> \n  filter(Year %in% c(1961:1990)) |> \n  group_by(Station, Month) |> \n  summarise(across(c(Tavg, Sn, Pr), list(\n    base = mean,\n    base_SE = std\n  )))\n\n# Средние значения за последнее десятилетие -------------------------------\n\nlast_decade_annualy <- annualy |> \n  filter(Year %in% c(2013:2022)) |>  #2023 год не берем, так как нет полных данных\n  group_by(Station) |> \n  summarise(across(c(Tavg, Sn, Pr), list(\n    last_decade = mean,\n    last_decade_SE = std\n  )))\n\nlast_decade_monthly <- seven_station |> \n  filter(Year %in% c(2013:2022)) |> \n  group_by(Station, Month) |>\n  summarise(across(c(Tavg, Sn, Pr), list(\n    last_decade = mean,\n    last_decade_SE = std\n  )))\n\n# Расчет аномалий, скользящего среднего, линейного тренда с 1976 года и разницы между базовой и последним десятилетием --------\nannualy_anomaly <- annualy |> \n  left_join(base_annualy, by = \"Station\") |> \n  group_by(Station) |> \n  mutate(T_anomaly = Tavg-Tavg_base,\n         Sn_anomaly = Sn-Sn_base,\n         Pr_anomaly = Pr-Pr_base) |> \n  left_join(last_decade_annualy, by = \"Station\") |> \n  mutate(T_diff = Tavg_last_decade-Tavg_base,\n         Sn_diff = Sn_last_decade-Sn_base,\n         Pr_diff = Pr_last_decade-Pr_base) |> \n  mutate(across(c(T_anomaly, Pr_anomaly, Sn_anomaly, Tavg, Pr, Sn), list(\n    roll_mean = means_smooth\n  ))) |>\n  mutate(across(contains(\"roll_mean\"),\n                list(from_1976 = \\(x) c(rep(NA, 15), x[16:length(x)])\n                )))\n\nmonthly_anomaly <- seven_station |> \n  left_join(base_monthly, by = c(\"Station\", \"Month\")) |> \n  group_by(Station, Month) |> \n  mutate(T_anomaly=Tavg-Tavg_base,\n         Sn_anomaly=Sn-Sn_base,\n         Pr_anomaly=Pr-Pr_base) |> \n  left_join(last_decade_monthly, by=c(\"Station\",\"Month\"))|> \n  mutate(T_diff = Tavg_last_decade-Tavg_base,\n         Sn_diff = Sn_last_decade-Sn_base,\n         Pr_diff = Pr_last_decade-Pr_base) |> \n  mutate(across(c(T_anomaly, Pr_anomaly, Sn_anomaly, Tavg, Pr, Sn), list(\n    roll_mean = means_smooth\n  ))) |>\n  mutate(across(contains(\"roll_mean\"),\n                list(from_1976 = \\(x) c(rep(NA, 15), x[16:length(x)])\n                )))\n\n#write_csv2(annualy_anomaly, \"../initial_data/climate/cleaned/annualy_anomaly.csv\")\n#write_csv2(monthly_anomaly, \"../initial_data/climate/cleaned/monthly_anomaly.csv\")\n\n\n\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"2_all_station_Tavg_and_Sn_quality.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","editor":"visual","theme":"cosmo","title":"Расчет среднемесячных значений температур и данных о снежном покрове для остальных станций","author":"Vasily Yakushov"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}